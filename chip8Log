Initializing ostring stream
pc: 0x1225
jump to address 0225
pc: 0x6000
sets VX to NN
V[0]: 0x00
NN: 0x00
V[0] after: 0x00
pc: 0x6100
sets VX to NN
V[1]: 0x00
NN: 0x00
V[1] after: 0x00
pc: 0x6208
sets VX to NN
V[2]: 0x00
NN: 0x08
V[2] after: 0x08
pc: 0xA3D3
sets I to address NNN
I: 0x0
NNN: 0x3D3
I: 0x3D3
pc: 0xD018
Draw Sprite
x = 0
y = 0
height = 8
gIndex = 0
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 3F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 7F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x00
NN: 0x08
V[1] after: 0x08
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x3D3
I: 0x3DB
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x08
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 0
y = 8
height = 8
gIndex = 200
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 1
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = 1
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 1
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 3
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 6
sRow = 3
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 7
sRow = 3
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x08
NN: 0x08
V[1] after: 0x10
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x3DB
I: 0x3E3
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x10
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 0
y = 10
height = 8
gIndex = 400
i = 0
sRow = 3
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 3F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x10
NN: 0x08
V[1] after: 0x18
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x3E3
I: 0x3EB
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x18
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 0
y = 18
height = 8
gIndex = 600
i = 0
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 3F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 8
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 8
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x18
NN: 0x08
V[1] after: 0x20
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x3EB
I: 0x3F3
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x20
NN: 0x20
VX == NN, skipping next instruction.
pc: 0x7008
adds NN to VX
V[0]: 0x00
NN: 0x08
V[0] after: 0x08
pc: 0x6100
sets VX to NN
V[1]: 0x20
NN: 0x00
V[1] after: 0x00
pc: 0x3040
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x40
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 8
y = 0
height = 8
gIndex = 8
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FC
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x00
NN: 0x08
V[1] after: 0x08
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x3F3
I: 0x3FB
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x08
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 8
y = 8
height = 8
gIndex = 208
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 42
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 42
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 62
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 62
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 62
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x08
NN: 0x08
V[1] after: 0x10
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x3FB
I: 0x403
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x10
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 8
y = 10
height = 8
gIndex = 408
i = 0
sRow = 62
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x10
NN: 0x08
V[1] after: 0x18
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x403
I: 0x40B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x18
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 8
y = 18
height = 8
gIndex = 608
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x18
NN: 0x08
V[1] after: 0x20
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x40B
I: 0x413
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x20
NN: 0x20
VX == NN, skipping next instruction.
pc: 0x7008
adds NN to VX
V[0]: 0x08
NN: 0x08
V[0] after: 0x10
pc: 0x6100
sets VX to NN
V[1]: 0x20
NN: 0x00
V[1] after: 0x00
pc: 0x3040
skips next instruction if VX equals NN
V[0]: 0x10
NN: 0x40
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 10
y = 0
height = 8
gIndex = 10
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7D
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 41
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 7D
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 5
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 6
sRow = 7D
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 7
sRow = 7D
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x00
NN: 0x08
V[1] after: 0x08
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x413
I: 0x41B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x08
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 10
y = 8
height = 8
gIndex = 210
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = C2
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = C2
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = C6
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 44
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 6C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 28
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x08
NN: 0x08
V[1] after: 0x10
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x41B
I: 0x423
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x10
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 10
y = 10
height = 8
gIndex = 410
i = 0
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x10
NN: 0x08
V[1] after: 0x18
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x423
I: 0x42B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x18
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 10
y = 18
height = 8
gIndex = 610
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x18
NN: 0x08
V[1] after: 0x20
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x42B
I: 0x433
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x20
NN: 0x20
VX == NN, skipping next instruction.
pc: 0x7008
adds NN to VX
V[0]: 0x10
NN: 0x08
V[0] after: 0x18
pc: 0x6100
sets VX to NN
V[1]: 0x20
NN: 0x00
V[1] after: 0x00
pc: 0x3040
skips next instruction if VX equals NN
V[0]: 0x18
NN: 0x40
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 18
y = 0
height = 8
gIndex = 18
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = F7
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 2
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 14
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = F7
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = F7
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 6
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x00
NN: 0x08
V[1] after: 0x08
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x433
I: 0x43B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x08
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 18
y = 8
height = 8
gIndex = 218
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 44
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = C2
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = C2
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = C2
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x08
NN: 0x08
V[1] after: 0x10
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x43B
I: 0x443
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x10
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 18
y = 10
height = 8
gIndex = 418
i = 0
sRow = C2
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x10
NN: 0x08
V[1] after: 0x18
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x443
I: 0x44B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x18
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 18
y = 18
height = 8
gIndex = 618
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x18
NN: 0x08
V[1] after: 0x20
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x44B
I: 0x453
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x20
NN: 0x20
VX == NN, skipping next instruction.
pc: 0x7008
adds NN to VX
V[0]: 0x18
NN: 0x08
V[0] after: 0x20
pc: 0x6100
sets VX to NN
V[1]: 0x20
NN: 0x00
V[1] after: 0x00
pc: 0x3040
skips next instruction if VX equals NN
V[0]: 0x20
NN: 0x40
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 20
y = 0
height = 8
gIndex = 20
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = EF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 2
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 28
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = E8
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = E8
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 2F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 7
sRow = 2F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x00
NN: 0x08
V[1] after: 0x08
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x453
I: 0x45B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x08
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 20
y = 8
height = 8
gIndex = 220
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = F9
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = 85
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = C5
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = C5
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 6
sRow = C5
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 7
sRow = C5
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x08
NN: 0x08
V[1] after: 0x10
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x45B
I: 0x463
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x10
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 20
y = 10
height = 8
gIndex = 420
i = 0
sRow = F9
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x10
NN: 0x08
V[1] after: 0x18
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x463
I: 0x46B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x18
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 20
y = 18
height = 8
gIndex = 620
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x18
NN: 0x08
V[1] after: 0x20
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x46B
I: 0x473
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x20
NN: 0x20
VX == NN, skipping next instruction.
pc: 0x7008
adds NN to VX
V[0]: 0x20
NN: 0x08
V[0] after: 0x28
pc: 0x6100
sets VX to NN
V[1]: 0x20
NN: 0x00
V[1] after: 0x00
pc: 0x3040
skips next instruction if VX equals NN
V[0]: 0x28
NN: 0x40
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 28
y = 0
height = 8
gIndex = 28
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = BE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 30
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 20
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = BE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = BE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x00
NN: 0x08
V[1] after: 0x08
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x473
I: 0x47B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x08
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 28
y = 8
height = 8
gIndex = 228
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = F7
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = E7
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 85
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 6
sRow = 85
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 7
sRow = 84
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x08
NN: 0x08
V[1] after: 0x10
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x47B
I: 0x483
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x10
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 28
y = 10
height = 8
gIndex = 428
i = 0
sRow = F4
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x10
NN: 0x08
V[1] after: 0x18
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x483
I: 0x48B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x18
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 28
y = 18
height = 8
gIndex = 628
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x18
NN: 0x08
V[1] after: 0x20
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x48B
I: 0x493
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x20
NN: 0x20
VX == NN, skipping next instruction.
pc: 0x7008
adds NN to VX
V[0]: 0x28
NN: 0x08
V[0] after: 0x30
pc: 0x6100
sets VX to NN
V[1]: 0x20
NN: 0x00
V[1] after: 0x00
pc: 0x3040
skips next instruction if VX equals NN
V[0]: 0x30
NN: 0x40
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 30
y = 0
height = 8
gIndex = 30
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 3F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 7F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x00
NN: 0x08
V[1] after: 0x08
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x493
I: 0x49B
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x08
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 30
y = 8
height = 8
gIndex = 230
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = EF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = 28
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = EF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = E0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 60
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x08
NN: 0x08
V[1] after: 0x10
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x49B
I: 0x4A3
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x10
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 30
y = 10
height = 8
gIndex = 430
i = 0
sRow = 6F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x10
NN: 0x08
V[1] after: 0x18
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x4A3
I: 0x4AB
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x18
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 30
y = 18
height = 8
gIndex = 630
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x18
NN: 0x08
V[1] after: 0x20
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x4AB
I: 0x4B3
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x20
NN: 0x20
VX == NN, skipping next instruction.
pc: 0x7008
adds NN to VX
V[0]: 0x30
NN: 0x08
V[0] after: 0x38
pc: 0x6100
sets VX to NN
V[1]: 0x20
NN: 0x00
V[1] after: 0x00
pc: 0x3040
skips next instruction if VX equals NN
V[0]: 0x38
NN: 0x40
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 38
y = 0
height = 8
gIndex = 38
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FC
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x00
NN: 0x08
V[1] after: 0x08
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x4B3
I: 0x4BB
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x08
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 38
y = 8
height = 8
gIndex = 238
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x08
NN: 0x08
V[1] after: 0x10
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x4BB
I: 0x4C3
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x10
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 38
y = 10
height = 8
gIndex = 438
i = 0
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FC
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7108
adds NN to VX
V[1]: 0x10
NN: 0x08
V[1] after: 0x18
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x4C3
I: 0x4CB
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x18
NN: 0x20
VX != NN, move to next instruction.
pc: 0x122D
jump to address 022D
pc: 0xD018
Draw Sprite
x = 38
y = 18
height = 8
gIndex = 638
i = 0
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 4
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = FC
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7108
adds NN to VX
V[1]: 0x18
NN: 0x08
V[1] after: 0x20
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x08
I: 0x4CB
I: 0x4D3
pc: 0x3120
skips next instruction if VX equals NN
V[1]: 0x20
NN: 0x20
VX == NN, skipping next instruction.
pc: 0x7008
adds NN to VX
V[0]: 0x38
NN: 0x08
V[0] after: 0x40
pc: 0x6100
sets VX to NN
V[1]: 0x20
NN: 0x00
V[1] after: 0x00
pc: 0x3040
skips next instruction if VX equals NN
V[0]: 0x40
NN: 0x40
VX == NN, skipping next instruction.
pc: 0x6905
sets VX to NN
V[9]: 0x00
NN: 0x05
V[9] after: 0x05
pc: 0x6C15
sets VX to NN
V[C]: 0x00
NN: 0x15
V[C] after: 0x15
pc: 0x6E00
sets VX to NN
V[E]: 0x00
NN: 0x00
V[E] after: 0x00
pc: 0x2387
push pc to stack 0x0245
Jump to subroutine at 0x0387
pc: 0x6A00
sets VX to NN
V[A]: 0x00
NN: 0x00
V[A] after: 0x00
pc: 0x8DE0
sets VX to the value of VY
V[D]: 0x00
V[0]: 0x00
V[D] after: 0x00
pc: 0x6B04
sets VX to NN
V[B]: 0x00
NN: 0x04
V[B] after: 0x04
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x4D3
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x00
I: 0x602
I: 0x602
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x40
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x602
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 4
y = 15
height = 6
gIndex = 544
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x04
NN: 0x08
V[B] after: 0x0C
pc: 0x7D01
adds NN to VX
V[D]: 0x00
NN: 0x01
V[D] after: 0x01
pc: 0x7A01
adds NN to VX
V[A]: 0x00
NN: 0x01
V[A] after: 0x01
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x01
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x01
I: 0x602
I: 0x603
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x603
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = C
y = 15
height = 6
gIndex = 54C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x0C
NN: 0x08
V[B] after: 0x14
pc: 0x7D01
adds NN to VX
V[D]: 0x01
NN: 0x01
V[D] after: 0x02
pc: 0x7A01
adds NN to VX
V[A]: 0x01
NN: 0x01
V[A] after: 0x02
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x02
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x02
I: 0x602
I: 0x604
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x604
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 14
y = 15
height = 6
gIndex = 554
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x14
NN: 0x08
V[B] after: 0x1C
pc: 0x7D01
adds NN to VX
V[D]: 0x02
NN: 0x01
V[D] after: 0x03
pc: 0x7A01
adds NN to VX
V[A]: 0x02
NN: 0x01
V[A] after: 0x03
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x03
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x03
I: 0x602
I: 0x605
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x605
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 1C
y = 15
height = 6
gIndex = 55C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x1C
NN: 0x08
V[B] after: 0x24
pc: 0x7D01
adds NN to VX
V[D]: 0x03
NN: 0x01
V[D] after: 0x04
pc: 0x7A01
adds NN to VX
V[A]: 0x03
NN: 0x01
V[A] after: 0x04
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x04
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x04
I: 0x602
I: 0x606
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x606
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 24
y = 15
height = 6
gIndex = 564
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x24
NN: 0x08
V[B] after: 0x2C
pc: 0x7D01
adds NN to VX
V[D]: 0x04
NN: 0x01
V[D] after: 0x05
pc: 0x7A01
adds NN to VX
V[A]: 0x04
NN: 0x01
V[A] after: 0x05
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x05
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x05
I: 0x602
I: 0x607
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x607
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 2C
y = 15
height = 6
gIndex = 56C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x2C
NN: 0x08
V[B] after: 0x34
pc: 0x7D01
adds NN to VX
V[D]: 0x05
NN: 0x01
V[D] after: 0x06
pc: 0x7A01
adds NN to VX
V[A]: 0x05
NN: 0x01
V[A] after: 0x06
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x06
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x06
I: 0x602
I: 0x608
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x608
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 34
y = 15
height = 6
gIndex = 574
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x34
NN: 0x08
V[B] after: 0x3C
pc: 0x7D01
adds NN to VX
V[D]: 0x06
NN: 0x01
V[D] after: 0x07
pc: 0x7A01
adds NN to VX
V[A]: 0x06
NN: 0x01
V[A] after: 0x07
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x07
NN: 0x07
VX == NN, skipping next instruction.
pc: 0x00EE
Return from subroutine: 0245
pc: 0x600A
sets VX to NN
V[0]: 0xA8
NN: 0x0A
V[0] after: 0x0A
pc: 0xF015
pc: 0xF007
sets VX to delay timer
V[0]: 0x0A
delay_timer: 	
V[0]: 0x09
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x09
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x09
delay_timer: 
V[0]: 0x06
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x06
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x06
delay_timer: 
V[0]: 0x03
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x03
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x03
delay_timer:  
V[0]: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x2387
push pc to stack 0x0251
Jump to subroutine at 0x0387
pc: 0x6A00
sets VX to NN
V[A]: 0x07
NN: 0x00
V[A] after: 0x00
pc: 0x8DE0
sets VX to the value of VY
V[D]: 0x07
V[0]: 0x00
V[D] after: 0x00
pc: 0x6B04
sets VX to NN
V[B]: 0x3C
NN: 0x04
V[B] after: 0x04
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x00
I: 0x602
I: 0x602
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x00
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x602
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 4
y = 15
height = 6
gIndex = 544
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x04
NN: 0x08
V[B] after: 0x0C
pc: 0x7D01
adds NN to VX
V[D]: 0x00
NN: 0x01
V[D] after: 0x01
pc: 0x7A01
adds NN to VX
V[A]: 0x00
NN: 0x01
V[A] after: 0x01
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x01
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x01
I: 0x602
I: 0x603
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x603
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = C
y = 15
height = 6
gIndex = 54C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x0C
NN: 0x08
V[B] after: 0x14
pc: 0x7D01
adds NN to VX
V[D]: 0x01
NN: 0x01
V[D] after: 0x02
pc: 0x7A01
adds NN to VX
V[A]: 0x01
NN: 0x01
V[A] after: 0x02
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x02
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x02
I: 0x602
I: 0x604
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x604
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 14
y = 15
height = 6
gIndex = 554
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x14
NN: 0x08
V[B] after: 0x1C
pc: 0x7D01
adds NN to VX
V[D]: 0x02
NN: 0x01
V[D] after: 0x03
pc: 0x7A01
adds NN to VX
V[A]: 0x02
NN: 0x01
V[A] after: 0x03
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x03
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x03
I: 0x602
I: 0x605
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x605
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 1C
y = 15
height = 6
gIndex = 55C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x1C
NN: 0x08
V[B] after: 0x24
pc: 0x7D01
adds NN to VX
V[D]: 0x03
NN: 0x01
V[D] after: 0x04
pc: 0x7A01
adds NN to VX
V[A]: 0x03
NN: 0x01
V[A] after: 0x04
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x04
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x04
I: 0x602
I: 0x606
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x606
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 24
y = 15
height = 6
gIndex = 564
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x24
NN: 0x08
V[B] after: 0x2C
pc: 0x7D01
adds NN to VX
V[D]: 0x04
NN: 0x01
V[D] after: 0x05
pc: 0x7A01
adds NN to VX
V[A]: 0x04
NN: 0x01
V[A] after: 0x05
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x05
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x05
I: 0x602
I: 0x607
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x607
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 2C
y = 15
height = 6
gIndex = 56C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x2C
NN: 0x08
V[B] after: 0x34
pc: 0x7D01
adds NN to VX
V[D]: 0x05
NN: 0x01
V[D] after: 0x06
pc: 0x7A01
adds NN to VX
V[A]: 0x05
NN: 0x01
V[A] after: 0x06
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x06
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x06
I: 0x602
I: 0x608
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x608
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 34
y = 15
height = 6
gIndex = 574
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x34
NN: 0x08
V[B] after: 0x3C
pc: 0x7D01
adds NN to VX
V[D]: 0x06
NN: 0x01
V[D] after: 0x07
pc: 0x7A01
adds NN to VX
V[A]: 0x06
NN: 0x01
V[A] after: 0x07
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x07
NN: 0x07
VX == NN, skipping next instruction.
pc: 0x00EE
Return from subroutine: 0251
pc: 0x7E01
adds NN to VX
V[E]: 0x00
NN: 0x01
V[E] after: 0x01
pc: 0x1245
jump to address 0245
pc: 0x2387
push pc to stack 0x0245
Jump to subroutine at 0x0387
pc: 0x6A00
sets VX to NN
V[A]: 0x07
NN: 0x00
V[A] after: 0x00
pc: 0x8DE0
sets VX to the value of VY
V[D]: 0x07
V[0]: 0x01
V[D] after: 0x01
pc: 0x6B04
sets VX to NN
V[B]: 0x3C
NN: 0x04
V[B] after: 0x04
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x01
I: 0x602
I: 0x603
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x603
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 4
y = 15
height = 6
gIndex = 544
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x04
NN: 0x08
V[B] after: 0x0C
pc: 0x7D01
adds NN to VX
V[D]: 0x01
NN: 0x01
V[D] after: 0x02
pc: 0x7A01
adds NN to VX
V[A]: 0x00
NN: 0x01
V[A] after: 0x01
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x01
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x02
I: 0x602
I: 0x604
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x604
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = C
y = 15
height = 6
gIndex = 54C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x0C
NN: 0x08
V[B] after: 0x14
pc: 0x7D01
adds NN to VX
V[D]: 0x02
NN: 0x01
V[D] after: 0x03
pc: 0x7A01
adds NN to VX
V[A]: 0x01
NN: 0x01
V[A] after: 0x02
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x02
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x03
I: 0x602
I: 0x605
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x605
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 14
y = 15
height = 6
gIndex = 554
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x14
NN: 0x08
V[B] after: 0x1C
pc: 0x7D01
adds NN to VX
V[D]: 0x03
NN: 0x01
V[D] after: 0x04
pc: 0x7A01
adds NN to VX
V[A]: 0x02
NN: 0x01
V[A] after: 0x03
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x03
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x04
I: 0x602
I: 0x606
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x606
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 1C
y = 15
height = 6
gIndex = 55C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x1C
NN: 0x08
V[B] after: 0x24
pc: 0x7D01
adds NN to VX
V[D]: 0x04
NN: 0x01
V[D] after: 0x05
pc: 0x7A01
adds NN to VX
V[A]: 0x03
NN: 0x01
V[A] after: 0x04
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x04
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x05
I: 0x602
I: 0x607
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x607
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 24
y = 15
height = 6
gIndex = 564
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x24
NN: 0x08
V[B] after: 0x2C
pc: 0x7D01
adds NN to VX
V[D]: 0x05
NN: 0x01
V[D] after: 0x06
pc: 0x7A01
adds NN to VX
V[A]: 0x04
NN: 0x01
V[A] after: 0x05
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x05
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x06
I: 0x602
I: 0x608
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x608
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 2C
y = 15
height = 6
gIndex = 56C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x2C
NN: 0x08
V[B] after: 0x34
pc: 0x7D01
adds NN to VX
V[D]: 0x06
NN: 0x01
V[D] after: 0x07
pc: 0x7A01
adds NN to VX
V[A]: 0x05
NN: 0x01
V[A] after: 0x06
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x06
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x07
I: 0x602
I: 0x609
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0x6C
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x6C
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x609
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x6C
I: 0x500
I: 0x56C
pc: 0xDBC6
Draw Sprite
x = 34
y = 15
height = 6
gIndex = 574
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x34
NN: 0x08
V[B] after: 0x3C
pc: 0x7D01
adds NN to VX
V[D]: 0x07
NN: 0x01
V[D] after: 0x08
pc: 0x7A01
adds NN to VX
V[A]: 0x06
NN: 0x01
V[A] after: 0x07
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x07
NN: 0x07
VX == NN, skipping next instruction.
pc: 0x00EE
Return from subroutine: 0245
pc: 0x600A
sets VX to NN
V[0]: 0x6C
NN: 0x0A
V[0] after: 0x0A
pc: 0xF015
pc: 0xF007
sets VX to delay timer
V[0]: 0x0A
delay_timer: 	
V[0]: 0x09
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x09
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x09
delay_timer: 
V[0]: 0x06
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x06
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x06
delay_timer: 
V[0]: 0x03
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x03
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x03
delay_timer:  
V[0]: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x2387
push pc to stack 0x0251
Jump to subroutine at 0x0387
pc: 0x6A00
sets VX to NN
V[A]: 0x07
NN: 0x00
V[A] after: 0x00
pc: 0x8DE0
sets VX to the value of VY
V[D]: 0x08
V[0]: 0x01
V[D] after: 0x01
pc: 0x6B04
sets VX to NN
V[B]: 0x3C
NN: 0x04
V[B] after: 0x04
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x56C
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x01
I: 0x602
I: 0x603
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x00
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x603
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 4
y = 15
height = 6
gIndex = 544
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x04
NN: 0x08
V[B] after: 0x0C
pc: 0x7D01
adds NN to VX
V[D]: 0x01
NN: 0x01
V[D] after: 0x02
pc: 0x7A01
adds NN to VX
V[A]: 0x00
NN: 0x01
V[A] after: 0x01
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x01
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x02
I: 0x602
I: 0x604
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x604
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = C
y = 15
height = 6
gIndex = 54C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x0C
NN: 0x08
V[B] after: 0x14
pc: 0x7D01
adds NN to VX
V[D]: 0x02
NN: 0x01
V[D] after: 0x03
pc: 0x7A01
adds NN to VX
V[A]: 0x01
NN: 0x01
V[A] after: 0x02
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x02
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x03
I: 0x602
I: 0x605
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x605
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 14
y = 15
height = 6
gIndex = 554
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x14
NN: 0x08
V[B] after: 0x1C
pc: 0x7D01
adds NN to VX
V[D]: 0x03
NN: 0x01
V[D] after: 0x04
pc: 0x7A01
adds NN to VX
V[A]: 0x02
NN: 0x01
V[A] after: 0x03
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x03
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x04
I: 0x602
I: 0x606
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x606
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 1C
y = 15
height = 6
gIndex = 55C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x1C
NN: 0x08
V[B] after: 0x24
pc: 0x7D01
adds NN to VX
V[D]: 0x04
NN: 0x01
V[D] after: 0x05
pc: 0x7A01
adds NN to VX
V[A]: 0x03
NN: 0x01
V[A] after: 0x04
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x04
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x05
I: 0x602
I: 0x607
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x607
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 24
y = 15
height = 6
gIndex = 564
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x24
NN: 0x08
V[B] after: 0x2C
pc: 0x7D01
adds NN to VX
V[D]: 0x05
NN: 0x01
V[D] after: 0x06
pc: 0x7A01
adds NN to VX
V[A]: 0x04
NN: 0x01
V[A] after: 0x05
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x05
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x06
I: 0x602
I: 0x608
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x608
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 2C
y = 15
height = 6
gIndex = 56C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x2C
NN: 0x08
V[B] after: 0x34
pc: 0x7D01
adds NN to VX
V[D]: 0x06
NN: 0x01
V[D] after: 0x07
pc: 0x7A01
adds NN to VX
V[A]: 0x05
NN: 0x01
V[A] after: 0x06
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x06
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x07
I: 0x602
I: 0x609
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0x6C
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x6C
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x609
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x6C
I: 0x500
I: 0x56C
pc: 0xDBC6
Draw Sprite
x = 34
y = 15
height = 6
gIndex = 574
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = C0
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x34
NN: 0x08
V[B] after: 0x3C
pc: 0x7D01
adds NN to VX
V[D]: 0x07
NN: 0x01
V[D] after: 0x08
pc: 0x7A01
adds NN to VX
V[A]: 0x06
NN: 0x01
V[A] after: 0x07
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x07
NN: 0x07
VX == NN, skipping next instruction.
pc: 0x00EE
Return from subroutine: 0251
pc: 0x7E01
adds NN to VX
V[E]: 0x01
NN: 0x01
V[E] after: 0x02
pc: 0x1245
jump to address 0245
pc: 0x2387
push pc to stack 0x0245
Jump to subroutine at 0x0387
pc: 0x6A00
sets VX to NN
V[A]: 0x07
NN: 0x00
V[A] after: 0x00
pc: 0x8DE0
sets VX to the value of VY
V[D]: 0x08
V[0]: 0x02
V[D] after: 0x02
pc: 0x6B04
sets VX to NN
V[B]: 0x3C
NN: 0x04
V[B] after: 0x04
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x56C
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x02
I: 0x602
I: 0x604
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x6C
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x604
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 4
y = 15
height = 6
gIndex = 544
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x04
NN: 0x08
V[B] after: 0x0C
pc: 0x7D01
adds NN to VX
V[D]: 0x02
NN: 0x01
V[D] after: 0x03
pc: 0x7A01
adds NN to VX
V[A]: 0x00
NN: 0x01
V[A] after: 0x01
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x01
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x03
I: 0x602
I: 0x605
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x605
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = C
y = 15
height = 6
gIndex = 54C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x0C
NN: 0x08
V[B] after: 0x14
pc: 0x7D01
adds NN to VX
V[D]: 0x03
NN: 0x01
V[D] after: 0x04
pc: 0x7A01
adds NN to VX
V[A]: 0x01
NN: 0x01
V[A] after: 0x02
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x02
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x04
I: 0x602
I: 0x606
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x606
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 14
y = 15
height = 6
gIndex = 554
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x14
NN: 0x08
V[B] after: 0x1C
pc: 0x7D01
adds NN to VX
V[D]: 0x04
NN: 0x01
V[D] after: 0x05
pc: 0x7A01
adds NN to VX
V[A]: 0x02
NN: 0x01
V[A] after: 0x03
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x03
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x05
I: 0x602
I: 0x607
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x607
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 1C
y = 15
height = 6
gIndex = 55C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x1C
NN: 0x08
V[B] after: 0x24
pc: 0x7D01
adds NN to VX
V[D]: 0x05
NN: 0x01
V[D] after: 0x06
pc: 0x7A01
adds NN to VX
V[A]: 0x03
NN: 0x01
V[A] after: 0x04
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x04
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x06
I: 0x602
I: 0x608
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x608
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 24
y = 15
height = 6
gIndex = 564
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x24
NN: 0x08
V[B] after: 0x2C
pc: 0x7D01
adds NN to VX
V[D]: 0x06
NN: 0x01
V[D] after: 0x07
pc: 0x7A01
adds NN to VX
V[A]: 0x04
NN: 0x01
V[A] after: 0x05
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x05
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x07
I: 0x602
I: 0x609
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0x6C
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x6C
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x609
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x6C
I: 0x500
I: 0x56C
pc: 0xDBC6
Draw Sprite
x = 2C
y = 15
height = 6
gIndex = 56C
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x2C
NN: 0x08
V[B] after: 0x34
pc: 0x7D01
adds NN to VX
V[D]: 0x07
NN: 0x01
V[D] after: 0x08
pc: 0x7A01
adds NN to VX
V[A]: 0x05
NN: 0x01
V[A] after: 0x06
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x06
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x56C
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x08
I: 0x602
I: 0x60A
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x6C
V[0]: 0x5A
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x5A
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x60A
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x5A
I: 0x500
I: 0x55A
pc: 0xDBC6
Draw Sprite
x = 34
y = 15
height = 6
gIndex = 574
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 82
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x34
NN: 0x08
V[B] after: 0x3C
pc: 0x7D01
adds NN to VX
V[D]: 0x08
NN: 0x01
V[D] after: 0x09
pc: 0x7A01
adds NN to VX
V[A]: 0x06
NN: 0x01
V[A] after: 0x07
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x07
NN: 0x07
VX == NN, skipping next instruction.
pc: 0x00EE
Return from subroutine: 0245
pc: 0x600A
sets VX to NN
V[0]: 0x5A
NN: 0x0A
V[0] after: 0x0A
pc: 0xF015
pc: 0xF007
sets VX to delay timer
V[0]: 0x0A
delay_timer: 	
V[0]: 0x09
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x09
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x09
delay_timer: 
V[0]: 0x06
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x06
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x06
delay_timer: 
V[0]: 0x03
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x03
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x03
delay_timer:  
V[0]: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x2387
push pc to stack 0x0251
Jump to subroutine at 0x0387
pc: 0x6A00
sets VX to NN
V[A]: 0x07
NN: 0x00
V[A] after: 0x00
pc: 0x8DE0
sets VX to the value of VY
V[D]: 0x09
V[0]: 0x02
V[D] after: 0x02
pc: 0x6B04
sets VX to NN
V[B]: 0x3C
NN: 0x04
V[B] after: 0x04
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x55A
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x02
I: 0x602
I: 0x604
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x00
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x604
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 4
y = 15
height = 6
gIndex = 544
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x04
NN: 0x08
V[B] after: 0x0C
pc: 0x7D01
adds NN to VX
V[D]: 0x02
NN: 0x01
V[D] after: 0x03
pc: 0x7A01
adds NN to VX
V[A]: 0x00
NN: 0x01
V[A] after: 0x01
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x01
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x03
I: 0x602
I: 0x605
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x605
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = C
y = 15
height = 6
gIndex = 54C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x0C
NN: 0x08
V[B] after: 0x14
pc: 0x7D01
adds NN to VX
V[D]: 0x03
NN: 0x01
V[D] after: 0x04
pc: 0x7A01
adds NN to VX
V[A]: 0x01
NN: 0x01
V[A] after: 0x02
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x02
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x04
I: 0x602
I: 0x606
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x606
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 14
y = 15
height = 6
gIndex = 554
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x14
NN: 0x08
V[B] after: 0x1C
pc: 0x7D01
adds NN to VX
V[D]: 0x04
NN: 0x01
V[D] after: 0x05
pc: 0x7A01
adds NN to VX
V[A]: 0x02
NN: 0x01
V[A] after: 0x03
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x03
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x05
I: 0x602
I: 0x607
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x607
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 1C
y = 15
height = 6
gIndex = 55C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x1C
NN: 0x08
V[B] after: 0x24
pc: 0x7D01
adds NN to VX
V[D]: 0x05
NN: 0x01
V[D] after: 0x06
pc: 0x7A01
adds NN to VX
V[A]: 0x03
NN: 0x01
V[A] after: 0x04
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x04
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x06
I: 0x602
I: 0x608
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x608
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 24
y = 15
height = 6
gIndex = 564
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x24
NN: 0x08
V[B] after: 0x2C
pc: 0x7D01
adds NN to VX
V[D]: 0x06
NN: 0x01
V[D] after: 0x07
pc: 0x7A01
adds NN to VX
V[A]: 0x04
NN: 0x01
V[A] after: 0x05
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x05
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x07
I: 0x602
I: 0x609
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0x6C
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x6C
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x609
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x6C
I: 0x500
I: 0x56C
pc: 0xDBC6
Draw Sprite
x = 2C
y = 15
height = 6
gIndex = 56C
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = C0
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x2C
NN: 0x08
V[B] after: 0x34
pc: 0x7D01
adds NN to VX
V[D]: 0x07
NN: 0x01
V[D] after: 0x08
pc: 0x7A01
adds NN to VX
V[A]: 0x05
NN: 0x01
V[A] after: 0x06
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x06
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x56C
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x08
I: 0x602
I: 0x60A
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x6C
V[0]: 0x5A
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x5A
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x60A
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x5A
I: 0x500
I: 0x55A
pc: 0xDBC6
Draw Sprite
x = 34
y = 15
height = 6
gIndex = 574
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 82
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = C0
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = C0
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = C0
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x34
NN: 0x08
V[B] after: 0x3C
pc: 0x7D01
adds NN to VX
V[D]: 0x08
NN: 0x01
V[D] after: 0x09
pc: 0x7A01
adds NN to VX
V[A]: 0x06
NN: 0x01
V[A] after: 0x07
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x07
NN: 0x07
VX == NN, skipping next instruction.
pc: 0x00EE
Return from subroutine: 0251
pc: 0x7E01
adds NN to VX
V[E]: 0x02
NN: 0x01
V[E] after: 0x03
pc: 0x1245
jump to address 0245
pc: 0x2387
push pc to stack 0x0245
Jump to subroutine at 0x0387
pc: 0x6A00
sets VX to NN
V[A]: 0x07
NN: 0x00
V[A] after: 0x00
pc: 0x8DE0
sets VX to the value of VY
V[D]: 0x09
V[0]: 0x03
V[D] after: 0x03
pc: 0x6B04
sets VX to NN
V[B]: 0x3C
NN: 0x04
V[B] after: 0x04
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x55A
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x03
I: 0x602
I: 0x605
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x5A
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x605
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 4
y = 15
height = 6
gIndex = 544
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x04
NN: 0x08
V[B] after: 0x0C
pc: 0x7D01
adds NN to VX
V[D]: 0x03
NN: 0x01
V[D] after: 0x04
pc: 0x7A01
adds NN to VX
V[A]: 0x00
NN: 0x01
V[A] after: 0x01
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x01
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x04
I: 0x602
I: 0x606
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x606
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = C
y = 15
height = 6
gIndex = 54C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x0C
NN: 0x08
V[B] after: 0x14
pc: 0x7D01
adds NN to VX
V[D]: 0x04
NN: 0x01
V[D] after: 0x05
pc: 0x7A01
adds NN to VX
V[A]: 0x01
NN: 0x01
V[A] after: 0x02
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x02
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x05
I: 0x602
I: 0x607
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x607
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 14
y = 15
height = 6
gIndex = 554
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x14
NN: 0x08
V[B] after: 0x1C
pc: 0x7D01
adds NN to VX
V[D]: 0x05
NN: 0x01
V[D] after: 0x06
pc: 0x7A01
adds NN to VX
V[A]: 0x02
NN: 0x01
V[A] after: 0x03
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x03
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x06
I: 0x602
I: 0x608
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x608
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 1C
y = 15
height = 6
gIndex = 55C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x1C
NN: 0x08
V[B] after: 0x24
pc: 0x7D01
adds NN to VX
V[D]: 0x06
NN: 0x01
V[D] after: 0x07
pc: 0x7A01
adds NN to VX
V[A]: 0x03
NN: 0x01
V[A] after: 0x04
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x04
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x07
I: 0x602
I: 0x609
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0x6C
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x6C
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x609
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x6C
I: 0x500
I: 0x56C
pc: 0xDBC6
Draw Sprite
x = 24
y = 15
height = 6
gIndex = 564
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x24
NN: 0x08
V[B] after: 0x2C
pc: 0x7D01
adds NN to VX
V[D]: 0x07
NN: 0x01
V[D] after: 0x08
pc: 0x7A01
adds NN to VX
V[A]: 0x04
NN: 0x01
V[A] after: 0x05
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x05
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x56C
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x08
I: 0x602
I: 0x60A
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x6C
V[0]: 0x5A
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x5A
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x60A
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x5A
I: 0x500
I: 0x55A
pc: 0xDBC6
Draw Sprite
x = 2C
y = 15
height = 6
gIndex = 56C
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 82
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = C0
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x2C
NN: 0x08
V[B] after: 0x34
pc: 0x7D01
adds NN to VX
V[D]: 0x08
NN: 0x01
V[D] after: 0x09
pc: 0x7A01
adds NN to VX
V[A]: 0x05
NN: 0x01
V[A] after: 0x06
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x06
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x55A
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x09
I: 0x602
I: 0x60B
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x5A
V[0]: 0x00
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x60B
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x00
I: 0x500
I: 0x500
pc: 0xDBC6
Draw Sprite
x = 34
y = 15
height = 6
gIndex = 574
i = 0
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 44
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 86
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 86
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 86
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x34
NN: 0x08
V[B] after: 0x3C
pc: 0x7D01
adds NN to VX
V[D]: 0x09
NN: 0x01
V[D] after: 0x0A
pc: 0x7A01
adds NN to VX
V[A]: 0x06
NN: 0x01
V[A] after: 0x07
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x07
NN: 0x07
VX == NN, skipping next instruction.
pc: 0x00EE
Return from subroutine: 0245
pc: 0x600A
sets VX to NN
V[0]: 0x00
NN: 0x0A
V[0] after: 0x0A
pc: 0xF015
pc: 0xF007
sets VX to delay timer
V[0]: 0x0A
delay_timer: 	
V[0]: 0x09
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x09
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x09
delay_timer: 
V[0]: 0x06
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x06
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x06
delay_timer: 
V[0]: 0x03
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x03
NN: 0x00
VX != NN, move to next instruction.
pc: 0x124B
jump to address 024B
pc: 0xF007
sets VX to delay timer
V[0]: 0x03
delay_timer:  
V[0]: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x2387
push pc to stack 0x0251
Jump to subroutine at 0x0387
pc: 0x6A00
sets VX to NN
V[A]: 0x07
NN: 0x00
V[A] after: 0x00
pc: 0x8DE0
sets VX to the value of VY
V[D]: 0x0A
V[0]: 0x03
V[D] after: 0x03
pc: 0x6B04
sets VX to NN
V[B]: 0x3C
NN: 0x04
V[B] after: 0x04
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x500
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x03
I: 0x602
I: 0x605
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x00
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x605
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 4
y = 15
height = 6
gIndex = 544
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x04
NN: 0x08
V[B] after: 0x0C
pc: 0x7D01
adds NN to VX
V[D]: 0x03
NN: 0x01
V[D] after: 0x04
pc: 0x7A01
adds NN to VX
V[A]: 0x00
NN: 0x01
V[A] after: 0x01
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x01
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x04
I: 0x602
I: 0x606
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x606
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = C
y = 15
height = 6
gIndex = 54C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x0C
NN: 0x08
V[B] after: 0x14
pc: 0x7D01
adds NN to VX
V[D]: 0x04
NN: 0x01
V[D] after: 0x05
pc: 0x7A01
adds NN to VX
V[A]: 0x01
NN: 0x01
V[A] after: 0x02
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x02
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x05
I: 0x602
I: 0x607
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x607
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 14
y = 15
height = 6
gIndex = 554
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x14
NN: 0x08
V[B] after: 0x1C
pc: 0x7D01
adds NN to VX
V[D]: 0x05
NN: 0x01
V[D] after: 0x06
pc: 0x7A01
adds NN to VX
V[A]: 0x02
NN: 0x01
V[A] after: 0x03
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x03
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x06
I: 0x602
I: 0x608
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x608
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 1C
y = 15
height = 6
gIndex = 55C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x1C
NN: 0x08
V[B] after: 0x24
pc: 0x7D01
adds NN to VX
V[D]: 0x06
NN: 0x01
V[D] after: 0x07
pc: 0x7A01
adds NN to VX
V[A]: 0x03
NN: 0x01
V[A] after: 0x04
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x04
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x07
I: 0x602
I: 0x609
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0x6C
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x6C
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x609
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x6C
I: 0x500
I: 0x56C
pc: 0xDBC6
Draw Sprite
x = 24
y = 15
height = 6
gIndex = 564
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = C0
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 2
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x24
NN: 0x08
V[B] after: 0x2C
pc: 0x7D01
adds NN to VX
V[D]: 0x07
NN: 0x01
V[D] after: 0x08
pc: 0x7A01
adds NN to VX
V[A]: 0x04
NN: 0x01
V[A] after: 0x05
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x05
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x56C
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x08
I: 0x602
I: 0x60A
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x6C
V[0]: 0x5A
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x5A
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x60A
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x5A
I: 0x500
I: 0x55A
pc: 0xDBC6
Draw Sprite
x = 2C
y = 15
height = 6
gIndex = 56C
i = 0
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 82
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = C0
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = C0
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = C0
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x2C
NN: 0x08
V[B] after: 0x34
pc: 0x7D01
adds NN to VX
V[D]: 0x08
NN: 0x01
V[D] after: 0x09
pc: 0x7A01
adds NN to VX
V[A]: 0x05
NN: 0x01
V[A] after: 0x06
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x06
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x55A
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x09
I: 0x602
I: 0x60B
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x5A
V[0]: 0x00
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x60B
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0x00
I: 0x500
I: 0x500
pc: 0xDBC6
Draw Sprite
x = 34
y = 15
height = 6
gIndex = 574
i = 0
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 44
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 86
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 86
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 86
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x34
NN: 0x08
V[B] after: 0x3C
pc: 0x7D01
adds NN to VX
V[D]: 0x09
NN: 0x01
V[D] after: 0x0A
pc: 0x7A01
adds NN to VX
V[A]: 0x06
NN: 0x01
V[A] after: 0x07
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x07
NN: 0x07
VX == NN, skipping next instruction.
pc: 0x00EE
Return from subroutine: 0251
pc: 0x7E01
adds NN to VX
V[E]: 0x03
NN: 0x01
V[E] after: 0x04
pc: 0x1245
jump to address 0245
pc: 0x2387
push pc to stack 0x0245
Jump to subroutine at 0x0387
pc: 0x6A00
sets VX to NN
V[A]: 0x07
NN: 0x00
V[A] after: 0x00
pc: 0x8DE0
sets VX to the value of VY
V[D]: 0x0A
V[0]: 0x04
V[D] after: 0x04
pc: 0x6B04
sets VX to NN
V[B]: 0x3C
NN: 0x04
V[B] after: 0x04
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x500
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x04
I: 0x602
I: 0x606
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0x00
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x606
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 4
y = 15
height = 6
gIndex = 544
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x04
NN: 0x08
V[B] after: 0x0C
pc: 0x7D01
adds NN to VX
V[D]: 0x04
NN: 0x01
V[D] after: 0x05
pc: 0x7A01
adds NN to VX
V[A]: 0x00
NN: 0x01
V[A] after: 0x01
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x01
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x05
I: 0x602
I: 0x607
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x607
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = C
y = 15
height = 6
gIndex = 54C
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x0C
NN: 0x08
V[B] after: 0x14
pc: 0x7D01
adds NN to VX
V[D]: 0x05
NN: 0x01
V[D] after: 0x06
pc: 0x7A01
adds NN to VX
V[A]: 0x01
NN: 0x01
V[A] after: 0x02
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x02
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0xA602
sets I to address NNN
I: 0x5A8
NNN: 0x602
I: 0x602
pc: 0xFD1E
adds VX to I, sets VCARRY to 1 on range overflow
V[D]: 0x06
I: 0x602
I: 0x608
pc: 0xF065
fills registers V0 to VX from memory starting at address I
filling registers from V[0] to V[0]V[0]: 0xA8
V[0]: 0xA8
pc: 0x30FF
skips next instruction if VX equals NN
V[0]: 0xA8
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x13A5
jump to address 03A5
pc: 0xA500
sets I to address NNN
I: 0x608
NNN: 0x500
I: 0x500
pc: 0xF01E
adds VX to I, sets VCARRY to 1 on range overflow
V[0]: 0xA8
I: 0x500
I: 0x5A8
pc: 0xDBC6
Draw Sprite
x = 14
y = 15
height = 6
gIndex = 554
i = 0
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7B08
adds NN to VX
V[B]: 0x14
NN: 0x08
V[B] after: 0x1C
pc: 0x7D01
adds NN to VX
V[D]: 0x06
NN: 0x01
V[D] after: 0x07
pc: 0x7A01
adds NN to VX
V[A]: 0x02
NN: 0x01
V[A] after: 0x03
pc: 0x3A07
skips next instruction if VX equals NN
V[A]: 0x03
NN: 0x07
VX != NN, move to next instruction.
pc: 0x138D
jump to address 038D
pc: 0xE9A1
pc: 0x1257
jump to address 0257
pc: 0x6600
sets VX to NN
V[6]: 0x00
NN: 0x00
V[6] after: 0x00
pc: 0x681C
sets VX to NN
V[8]: 0x00
NN: 0x1C
V[8] after: 0x1C
pc: 0x6900
sets VX to NN
V[9]: 0x05
NN: 0x00
V[9] after: 0x00
pc: 0x6A04
sets VX to NN
V[A]: 0x03
NN: 0x04
V[A] after: 0x04
pc: 0x6B0A
sets VX to NN
V[B]: 0x1C
NN: 0x0A
V[B] after: 0x0A
pc: 0x6C04
sets VX to NN
V[C]: 0x15
NN: 0x04
V[C] after: 0x04
pc: 0x6D3C
sets VX to NN
V[D]: 0x07
NN: 0x3C
V[D] after: 0x3C
pc: 0x6E0F
sets VX to NN
V[E]: 0x04
NN: 0x0F
V[E] after: 0x0F
pc: 0x00E0
Clear Screen
pc: 0x236B
push pc to stack 0x0269
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x5A8
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0xA8
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1C
y = 1C
height = 4
gIndex = 71C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0269
pc: 0x2347
push pc to stack 0x026B
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x00
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x1C
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 4
height = 6
gIndex = 10A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 4
height = 6
gIndex = 116
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 22
y = 4
height = 6
gIndex = 122
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 4
height = 6
gIndex = 12E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 026B
pc: 0xFD15
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x6005
sets VX to NN
V[0]: 0x06
NN: 0x05
V[0] after: 0x05
pc: 0xE09E
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer: /
V[7]: 0x2F
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x2F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x05
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x6005
sets VX to NN
V[0]: 0x06
NN: 0x05
V[0] after: 0x05
pc: 0xE09E
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x2F
delay_timer:  
V[7]: 0x20
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x20
NN: 0x00
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x05
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x6005
sets VX to NN
V[0]: 0x06
NN: 0x05
V[0] after: 0x05
pc: 0xE09E
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x20
delay_timer: 
V[7]: 0x11
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x11
NN: 0x00
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x05
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x6005
sets VX to NN
V[0]: 0x06
NN: 0x05
V[0] after: 0x05
pc: 0xE09E
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x11
delay_timer: 
V[7]: 0x02
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x05
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x6005
sets VX to NN
V[0]: 0x06
NN: 0x05
V[0] after: 0x05
pc: 0xE09E
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x02
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x05
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 4
height = 6
gIndex = 10A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 4
height = 6
gIndex = 116
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 22
y = 4
height = 6
gIndex = 122
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 4
height = 6
gIndex = 12E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0x04
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 4
height = 6
gIndex = 10E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 4
height = 6
gIndex = 11A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 4
height = 6
gIndex = 126
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 4
height = 6
gIndex = 132
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x04
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x6005
sets VX to NN
V[0]: 0x06
NN: 0x05
V[0] after: 0x05
pc: 0xE09E
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x05
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 4
height = 6
gIndex = 10E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 4
height = 6
gIndex = 11A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 4
height = 6
gIndex = 126
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 4
height = 6
gIndex = 132
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0x04
V[B] after: 0x12
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x12
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x04
NN: 0x02
V[C] after: 0x06
pc: 0x6AFC
sets VX to NN
V[A]: 0x04
NN: 0xFC
V[A] after: 0xFC
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 6
height = 6
gIndex = 192
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 6
height = 6
gIndex = 19E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 6
height = 6
gIndex = 1AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = 6
height = 6
gIndex = 1B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x06
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x6005
sets VX to NN
V[0]: 0x06
NN: 0x05
V[0] after: 0x05
pc: 0xE09E
pc: 0x6601
sets VX to NN
V[6]: 0x00
NN: 0x01
V[6] after: 0x01
pc: 0x651B
sets VX to NN
V[5]: 0x00
NN: 0x1B
V[5] after: 0x1B
pc: 0x8480
sets VX to the value of VY
V[4]: 0x00
V[0]: 0x1C
V[4] after: 0x1C
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 1B
height = 1
gIndex = 6DC
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 1B
height = 1
gIndex = 6DC
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x1B
NN: 0xFF
V[5] after: 0x1A
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x1A
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 1A
height = 1
gIndex = 69C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x05
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 6
height = 6
gIndex = 192
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 6
height = 6
gIndex = 19E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 6
height = 6
gIndex = 1AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = 6
height = 6
gIndex = 1B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x12
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 6
height = 6
gIndex = 18E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 6
height = 6
gIndex = 19A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 6
height = 6
gIndex = 1A6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 6
height = 6
gIndex = 1B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x06
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 1A
height = 1
gIndex = 69C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x1A
NN: 0xFF
V[5] after: 0x19
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x19
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 19
height = 1
gIndex = 65C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 6
height = 6
gIndex = 18E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 6
height = 6
gIndex = 19A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 6
height = 6
gIndex = 1A6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 6
height = 6
gIndex = 1B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0A
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 6
height = 6
gIndex = 18A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 6
height = 6
gIndex = 196
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 22
y = 6
height = 6
gIndex = 1A2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 6
height = 6
gIndex = 1AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x06
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x236B
push pc to stack 0x0283
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x06
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1C
y = 1C
height = 4
gIndex = 71C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0283
pc: 0x3839
skips next instruction if VX equals NN
V[8]: 0x1C
NN: 0x39
VX != NN, move to next instruction.
pc: 0x7801
adds NN to VX
V[8]: 0x1C
NN: 0x01
V[8] after: 0x1D
pc: 0x236B
push pc to stack 0x0289
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x1C
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1D
y = 1C
height = 4
gIndex = 71D
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0289
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 19
height = 1
gIndex = 65C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x19
NN: 0xFF
V[5] after: 0x18
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x18
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 18
height = 1
gIndex = 61C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x1C
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 6
height = 6
gIndex = 18A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 6
height = 6
gIndex = 196
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 22
y = 6
height = 6
gIndex = 1A2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 6
height = 6
gIndex = 1AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x06
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 6
height = 6
gIndex = 186
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 6
height = 6
gIndex = 192
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 6
height = 6
gIndex = 19E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 6
height = 6
gIndex = 1AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x06
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x236B
push pc to stack 0x0283
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x06
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1D
y = 1C
height = 4
gIndex = 71D
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0283
pc: 0x3839
skips next instruction if VX equals NN
V[8]: 0x1D
NN: 0x39
VX != NN, move to next instruction.
pc: 0x7801
adds NN to VX
V[8]: 0x1D
NN: 0x01
V[8] after: 0x1E
pc: 0x236B
push pc to stack 0x0289
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x1C
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1E
y = 1C
height = 4
gIndex = 71E
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0289
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 18
height = 1
gIndex = 61C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x18
NN: 0xFF
V[5] after: 0x17
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x17
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 17
height = 1
gIndex = 5DC
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x1C
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 6
height = 6
gIndex = 186
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 6
height = 6
gIndex = 192
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 6
height = 6
gIndex = 19E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 6
height = 6
gIndex = 1AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x06
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x02
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x02
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x06
NN: 0x02
V[C] after: 0x08
pc: 0x6A04
sets VX to NN
V[A]: 0xFC
NN: 0x04
V[A] after: 0x04
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = 8
height = 6
gIndex = 202
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 8
height = 6
gIndex = 20E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 8
height = 6
gIndex = 21A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 8
height = 6
gIndex = 226
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x08
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x236B
push pc to stack 0x0283
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x06
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1E
y = 1C
height = 4
gIndex = 71E
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0283
pc: 0x3839
skips next instruction if VX equals NN
V[8]: 0x1E
NN: 0x39
VX != NN, move to next instruction.
pc: 0x7801
adds NN to VX
V[8]: 0x1E
NN: 0x01
V[8] after: 0x1F
pc: 0x236B
push pc to stack 0x0289
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x1C
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1F
y = 1C
height = 4
gIndex = 71F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0289
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 17
height = 1
gIndex = 5DC
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x17
NN: 0xFF
V[5] after: 0x16
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x16
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 16
height = 1
gIndex = 59C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x1C
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = 8
height = 6
gIndex = 202
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 8
height = 6
gIndex = 20E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 8
height = 6
gIndex = 21A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 8
height = 6
gIndex = 226
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x02
V[0]: 0x04
V[B] after: 0x06
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 8
height = 6
gIndex = 206
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 8
height = 6
gIndex = 212
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 8
height = 6
gIndex = 21E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 8
height = 6
gIndex = 22A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x08
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 16
height = 1
gIndex = 59C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x16
NN: 0xFF
V[5] after: 0x15
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x15
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 15
height = 1
gIndex = 55C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 8
height = 6
gIndex = 206
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 8
height = 6
gIndex = 212
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 8
height = 6
gIndex = 21E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 8
height = 6
gIndex = 22A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x06
V[0]: 0x04
V[B] after: 0x0A
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 8
height = 6
gIndex = 20A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 8
height = 6
gIndex = 216
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 22
y = 8
height = 6
gIndex = 222
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 8
height = 6
gIndex = 22E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x08
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 15
height = 1
gIndex = 55C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x15
NN: 0xFF
V[5] after: 0x14
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x14
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 14
height = 1
gIndex = 51C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 8
height = 6
gIndex = 20A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 8
height = 6
gIndex = 216
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 22
y = 8
height = 6
gIndex = 222
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 8
height = 6
gIndex = 22E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0x04
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 8
height = 6
gIndex = 20E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 8
height = 6
gIndex = 21A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 8
height = 6
gIndex = 226
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 8
height = 6
gIndex = 232
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x08
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 14
height = 1
gIndex = 51C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x14
NN: 0xFF
V[5] after: 0x13
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x13
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 13
height = 1
gIndex = 4DC
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 8
height = 6
gIndex = 20E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 8
height = 6
gIndex = 21A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 8
height = 6
gIndex = 226
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 8
height = 6
gIndex = 232
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0x04
V[B] after: 0x12
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x12
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x08
NN: 0x02
V[C] after: 0x0A
pc: 0x6AFC
sets VX to NN
V[A]: 0x04
NN: 0xFC
V[A] after: 0xFC
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = A
height = 6
gIndex = 292
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = A
height = 6
gIndex = 29E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = A
height = 6
gIndex = 2AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = A
height = 6
gIndex = 2B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0A
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 13
height = 1
gIndex = 4DC
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x13
NN: 0xFF
V[5] after: 0x12
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x12
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 12
height = 1
gIndex = 49C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = A
height = 6
gIndex = 292
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = A
height = 6
gIndex = 29E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = A
height = 6
gIndex = 2AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = A
height = 6
gIndex = 2B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x12
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = A
height = 6
gIndex = 28E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = A
height = 6
gIndex = 29A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = A
height = 6
gIndex = 2A6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = A
height = 6
gIndex = 2B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0A
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 12
height = 1
gIndex = 49C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x12
NN: 0xFF
V[5] after: 0x11
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x11
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 11
height = 1
gIndex = 45C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = A
height = 6
gIndex = 28E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = A
height = 6
gIndex = 29A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = A
height = 6
gIndex = 2A6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = A
height = 6
gIndex = 2B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0A
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = A
height = 6
gIndex = 28A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = A
height = 6
gIndex = 296
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 22
y = A
height = 6
gIndex = 2A2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = A
height = 6
gIndex = 2AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0A
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 11
height = 1
gIndex = 45C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x11
NN: 0xFF
V[5] after: 0x10
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x10
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = 10
height = 1
gIndex = 41C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = A
height = 6
gIndex = 28A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = A
height = 6
gIndex = 296
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 22
y = A
height = 6
gIndex = 2A2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = A
height = 6
gIndex = 2AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x06
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = A
height = 6
gIndex = 286
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = A
height = 6
gIndex = 292
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = A
height = 6
gIndex = 29E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = A
height = 6
gIndex = 2AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0A
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = 10
height = 1
gIndex = 41C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x10
NN: 0xFF
V[5] after: 0x0F
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x0F
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = F
height = 1
gIndex = 3DC
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = A
height = 6
gIndex = 286
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = A
height = 6
gIndex = 292
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = A
height = 6
gIndex = 29E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = A
height = 6
gIndex = 2AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x06
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x02
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x02
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x0A
NN: 0x02
V[C] after: 0x0C
pc: 0x6A04
sets VX to NN
V[A]: 0xFC
NN: 0x04
V[A] after: 0x04
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = C
height = 6
gIndex = 302
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = C
height = 6
gIndex = 30E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = C
height = 6
gIndex = 31A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = C
height = 6
gIndex = 326
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0C
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1C
y = F
height = 1
gIndex = 3DC
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x0F
NN: 0xFF
V[5] after: 0x0E
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x0E
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1C
y = E
height = 1
gIndex = 39C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x01
NN: 0x01
VX == NN, skipping next instruction.
pc: 0xD451
Draw Sprite
x = 1C
y = E
height = 1
gIndex = 39C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x6600
sets VX to NN
V[6]: 0x01
NN: 0x00
V[6] after: 0x00
pc: 0x8340
sets VX to the value of VY
V[3]: 0x00
V[0]: 0x1C
V[3] after: 0x1C
pc: 0x7303
adds NN to VX
V[3]: 0x1C
NN: 0x03
V[3] after: 0x1F
pc: 0x83B5
subtracts VY from VX
V[3]: 0x1F
V[0]: 0x02
V[3] after: 0x1D
pc: 0x62F8
sets VX to NN
V[2]: 0x08
NN: 0xF8
V[2] after: 0xF8
pc: 0x8322
sets VX to the value of VX & VY
V[3]: 0x1D
V[0]: 0xF8
V[3] after: 0x18
pc: 0x6208
sets VX to NN
V[2]: 0xF8
NN: 0x08
V[2] after: 0x08
pc: 0x3300
skips next instruction if VX equals NN
V[3]: 0x18
NN: 0x00
VX != NN, move to next instruction.
pc: 0x12C9
jump to address 02C9
pc: 0x8206
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[2]: 0x08
VCARRY: 0x 
V[2]: 0x04
pc: 0x4308
skips the next instruction if VX does NOT equal NN
V[3]: 0x18
NN: 0x0008
VX != NN, skipping next instruction.
pc: 0x3310
skips next instruction if VX equals NN
V[3]: 0x18
NN: 0x10
VX != NN, move to next instruction.
pc: 0x12D5
jump to address 02D5
pc: 0x8206
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[2]: 0x04
VCARRY: 0x 
V[2]: 0x02
pc: 0x3318
skips next instruction if VX equals NN
V[3]: 0x18
NN: 0x18
VX == NN, skipping next instruction.
pc: 0x2373
push pc to stack 0x02DB
Jump to subroutine at 0x0373
pc: 0x2347
push pc to stack 0x0373
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = C
height = 6
gIndex = 302
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = C
height = 6
gIndex = 30E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x02
V[0] after: 0x02
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x02
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = C
height = 6
gIndex = 31A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x02
V[0]: 0x0F
V[0] after: 0x0F
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0F
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = C
height = 6
gIndex = 326
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 0373
pc: 0x8E23
sets VX to the value of VX XOR VY
V[E]: 0x0F
V[0]: 0x02
V[E] after: 0x0D
pc: 0x2347
push pc to stack 0x0377
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = C
height = 6
gIndex = 302
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = C
height = 6
gIndex = 30E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = C
height = 6
gIndex = 326
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 0377
pc: 0x6005
sets VX to NN
V[0]: 0x01
NN: 0x05
V[0] after: 0x05
pc: 0xF018
pc: 0xF015
pc: 0xF007
sets VX to delay timer
V[0]: 0x05
delay_timer: 
V[0]: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0x137F
jump to address 037F
pc: 0xF007
sets VX to delay timer
V[0]: 0x04
delay_timer: 
V[0]: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x137F
jump to address 037F
pc: 0xF007
sets VX to delay timer
V[0]: 0x01
delay_timer:  
V[0]: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x00EE
Return from subroutine: 02DB
pc: 0x8206
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[2]: 0x02
VCARRY: 0x 
V[2]: 0x01
pc: 0x4320
skips the next instruction if VX does NOT equal NN
V[3]: 0x18
NN: 0x0020
VX != NN, skipping next instruction.
pc: 0x3328
skips next instruction if VX equals NN
V[3]: 0x18
NN: 0x28
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = C
height = 6
gIndex = 302
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = C
height = 6
gIndex = 30E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = C
height = 6
gIndex = 326
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x02
V[0]: 0x04
V[B] after: 0x06
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = C
height = 6
gIndex = 306
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = C
height = 6
gIndex = 312
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = C
height = 6
gIndex = 32A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0C
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x6005
sets VX to NN
V[0]: 0x06
NN: 0x05
V[0] after: 0x05
pc: 0xE09E
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x05
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = C
height = 6
gIndex = 306
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = C
height = 6
gIndex = 312
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = C
height = 6
gIndex = 32A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x06
V[0]: 0x04
V[B] after: 0x0A
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = C
height = 6
gIndex = 30A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = C
height = 6
gIndex = 316
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = C
height = 6
gIndex = 32E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0C
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x6005
sets VX to NN
V[0]: 0x06
NN: 0x05
V[0] after: 0x05
pc: 0xE09E
pc: 0x6601
sets VX to NN
V[6]: 0x00
NN: 0x01
V[6] after: 0x01
pc: 0x651B
sets VX to NN
V[5]: 0x0E
NN: 0x1B
V[5] after: 0x1B
pc: 0x8480
sets VX to the value of VY
V[4]: 0x1C
V[0]: 0x1F
V[4] after: 0x1F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 1B
height = 1
gIndex = 6DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 1B
height = 1
gIndex = 6DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x1B
NN: 0xFF
V[5] after: 0x1A
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x1A
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 1A
height = 1
gIndex = 69F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x05
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = C
height = 6
gIndex = 30A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = C
height = 6
gIndex = 316
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = C
height = 6
gIndex = 32E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0x04
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = C
height = 6
gIndex = 30E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = C
height = 6
gIndex = 31A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = C
height = 6
gIndex = 332
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0C
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 1A
height = 1
gIndex = 69F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x1A
NN: 0xFF
V[5] after: 0x19
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x19
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 19
height = 1
gIndex = 65F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = C
height = 6
gIndex = 30E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = C
height = 6
gIndex = 31A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = C
height = 6
gIndex = 332
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0x04
V[B] after: 0x12
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x12
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x0C
NN: 0x02
V[C] after: 0x0E
pc: 0x6AFC
sets VX to NN
V[A]: 0x04
NN: 0xFC
V[A] after: 0xFC
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = E
height = 6
gIndex = 392
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = E
height = 6
gIndex = 39E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = E
height = 6
gIndex = 3B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0E
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 19
height = 1
gIndex = 65F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x19
NN: 0xFF
V[5] after: 0x18
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x18
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 18
height = 1
gIndex = 61F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = E
height = 6
gIndex = 392
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = E
height = 6
gIndex = 39E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = E
height = 6
gIndex = 3B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x12
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = E
height = 6
gIndex = 38E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = E
height = 6
gIndex = 39A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = E
height = 6
gIndex = 3B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0E
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 18
height = 1
gIndex = 61F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x18
NN: 0xFF
V[5] after: 0x17
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x17
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 17
height = 1
gIndex = 5DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = E
height = 6
gIndex = 38E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = E
height = 6
gIndex = 39A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = E
height = 6
gIndex = 3B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0A
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = E
height = 6
gIndex = 38A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = E
height = 6
gIndex = 396
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = E
height = 6
gIndex = 3AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0E
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x236B
push pc to stack 0x0275
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x04
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1F
y = 1C
height = 4
gIndex = 71F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0275
pc: 0x3800
skips next instruction if VX equals NN
V[8]: 0x1F
NN: 0x00
VX != NN, move to next instruction.
pc: 0x78FF
adds NN to VX
V[8]: 0x1F
NN: 0xFF
V[8] after: 0x1E
pc: 0x236B
push pc to stack 0x027B
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x1C
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1E
y = 1C
height = 4
gIndex = 71E
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 027B
pc: 0x6006
sets VX to NN
V[0]: 0x1C
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 17
height = 1
gIndex = 5DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x17
NN: 0xFF
V[5] after: 0x16
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x16
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 16
height = 1
gIndex = 59F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = E
height = 6
gIndex = 38A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = E
height = 6
gIndex = 396
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = E
height = 6
gIndex = 3AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x06
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = E
height = 6
gIndex = 386
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = E
height = 6
gIndex = 392
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = E
height = 6
gIndex = 3AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x0E
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x236B
push pc to stack 0x0275
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x04
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1E
y = 1C
height = 4
gIndex = 71E
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0275
pc: 0x3800
skips next instruction if VX equals NN
V[8]: 0x1E
NN: 0x00
VX != NN, move to next instruction.
pc: 0x78FF
adds NN to VX
V[8]: 0x1E
NN: 0xFF
V[8] after: 0x1D
pc: 0x236B
push pc to stack 0x027B
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x1C
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1D
y = 1C
height = 4
gIndex = 71D
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 027B
pc: 0x6006
sets VX to NN
V[0]: 0x1C
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 16
height = 1
gIndex = 59F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x16
NN: 0xFF
V[5] after: 0x15
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x15
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 15
height = 1
gIndex = 55F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = E
height = 6
gIndex = 386
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = E
height = 6
gIndex = 392
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = E
height = 6
gIndex = 3AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x06
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x02
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x02
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x0E
NN: 0x02
V[C] after: 0x10
pc: 0x6A04
sets VX to NN
V[A]: 0xFC
NN: 0x04
V[A] after: 0x04
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = 10
height = 6
gIndex = 402
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 10
height = 6
gIndex = 40E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 10
height = 6
gIndex = 426
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x10
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x236B
push pc to stack 0x0275
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x04
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1D
y = 1C
height = 4
gIndex = 71D
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0275
pc: 0x3800
skips next instruction if VX equals NN
V[8]: 0x1D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x78FF
adds NN to VX
V[8]: 0x1D
NN: 0xFF
V[8] after: 0x1C
pc: 0x236B
push pc to stack 0x027B
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x1C
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1C
y = 1C
height = 4
gIndex = 71C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 027B
pc: 0x6006
sets VX to NN
V[0]: 0x1C
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 15
height = 1
gIndex = 55F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
pc: 0x75FF
adds NN to VX
V[5]: 0x15
NN: 0xFF
V[5] after: 0x14
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x14
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 14
height = 1
gIndex = 51F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = 10
height = 6
gIndex = 402
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 10
height = 6
gIndex = 40E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 10
height = 6
gIndex = 426
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x02
V[0]: 0x04
V[B] after: 0x06
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 10
height = 6
gIndex = 406
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 10
height = 6
gIndex = 412
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 10
height = 6
gIndex = 42A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x10
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x236B
push pc to stack 0x0275
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x04
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1C
y = 1C
height = 4
gIndex = 71C
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0275
pc: 0x3800
skips next instruction if VX equals NN
V[8]: 0x1C
NN: 0x00
VX != NN, move to next instruction.
pc: 0x78FF
adds NN to VX
V[8]: 0x1C
NN: 0xFF
V[8] after: 0x1B
pc: 0x236B
push pc to stack 0x027B
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x1C
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1B
y = 1C
height = 4
gIndex = 71B
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 027B
pc: 0x6006
sets VX to NN
V[0]: 0x1C
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 14
height = 1
gIndex = 51F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x14
NN: 0xFF
V[5] after: 0x13
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x13
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 13
height = 1
gIndex = 4DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 10
height = 6
gIndex = 406
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 10
height = 6
gIndex = 412
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 10
height = 6
gIndex = 42A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x06
V[0]: 0x04
V[B] after: 0x0A
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 10
height = 6
gIndex = 40A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 10
height = 6
gIndex = 416
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 10
height = 6
gIndex = 42E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x10
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x236B
push pc to stack 0x0275
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x04
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1B
y = 1C
height = 4
gIndex = 71B
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 0275
pc: 0x3800
skips next instruction if VX equals NN
V[8]: 0x1B
NN: 0x00
VX != NN, move to next instruction.
pc: 0x78FF
adds NN to VX
V[8]: 0x1B
NN: 0xFF
V[8] after: 0x1A
pc: 0x236B
push pc to stack 0x027B
Jump to subroutine at 0x036B
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0x601C
sets VX to NN
V[0]: 0x1C
NN: 0x1C
V[0] after: 0x1C
pc: 0xD804
Draw Sprite
x = 1A
y = 1C
height = 4
gIndex = 71A
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 38
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 7C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = FE
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x00EE
Return from subroutine: 027B
pc: 0x6006
sets VX to NN
V[0]: 0x1C
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3CF
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 13
height = 1
gIndex = 4DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x13
NN: 0xFF
V[5] after: 0x12
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x12
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 12
height = 1
gIndex = 49F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 10
height = 6
gIndex = 40A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 10
height = 6
gIndex = 416
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 10
height = 6
gIndex = 42E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0x04
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 10
height = 6
gIndex = 40E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 10
height = 6
gIndex = 41A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 10
height = 6
gIndex = 432
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x10
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 12
height = 1
gIndex = 49F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x12
NN: 0xFF
V[5] after: 0x11
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x11
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 11
height = 1
gIndex = 45F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 1
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 10
height = 6
gIndex = 40E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 10
height = 6
gIndex = 41A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 10
height = 6
gIndex = 432
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0x04
V[B] after: 0x12
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x12
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x10
NN: 0x02
V[C] after: 0x12
pc: 0x6AFC
sets VX to NN
V[A]: 0x04
NN: 0xFC
V[A] after: 0xFC
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 12
height = 6
gIndex = 492
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 12
height = 6
gIndex = 49E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = 12
height = 6
gIndex = 4B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x12
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 11
height = 1
gIndex = 45F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x11
NN: 0xFF
V[5] after: 0x10
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x10
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 10
height = 1
gIndex = 41F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 12
height = 6
gIndex = 492
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 12
height = 6
gIndex = 49E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = 12
height = 6
gIndex = 4B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x12
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 12
height = 6
gIndex = 48E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 12
height = 6
gIndex = 49A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 12
height = 6
gIndex = 4B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x12
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 10
height = 1
gIndex = 41F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x10
NN: 0xFF
V[5] after: 0x0F
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x0F
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = F
height = 1
gIndex = 3DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 12
height = 6
gIndex = 48E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 12
height = 6
gIndex = 49A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 12
height = 6
gIndex = 4B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0A
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 12
height = 6
gIndex = 48A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 12
height = 6
gIndex = 496
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 12
height = 6
gIndex = 4AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x12
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = F
height = 1
gIndex = 3DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x0F
NN: 0xFF
V[5] after: 0x0E
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x0E
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = E
height = 1
gIndex = 39F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 12
height = 6
gIndex = 48A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 12
height = 6
gIndex = 496
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 12
height = 6
gIndex = 4AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x06
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 12
height = 6
gIndex = 486
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 12
height = 6
gIndex = 492
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 12
height = 6
gIndex = 4AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x12
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = E
height = 1
gIndex = 39F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x0E
NN: 0xFF
V[5] after: 0x0D
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x0D
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = D
height = 1
gIndex = 35F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 12
height = 6
gIndex = 486
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 12
height = 6
gIndex = 492
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 12
height = 6
gIndex = 4AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x06
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x02
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x02
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x12
NN: 0x02
V[C] after: 0x14
pc: 0x6A04
sets VX to NN
V[A]: 0xFC
NN: 0x04
V[A] after: 0x04
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = 14
height = 6
gIndex = 502
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 14
height = 6
gIndex = 50E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 14
height = 6
gIndex = 526
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x14
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = D
height = 1
gIndex = 35F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x0D
NN: 0xFF
V[5] after: 0x0C
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x0C
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = C
height = 1
gIndex = 31F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = 14
height = 6
gIndex = 502
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 14
height = 6
gIndex = 50E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 14
height = 6
gIndex = 526
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x02
V[0]: 0x04
V[B] after: 0x06
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 14
height = 6
gIndex = 506
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 14
height = 6
gIndex = 512
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 14
height = 6
gIndex = 52A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x14
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = C
height = 1
gIndex = 31F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x0C
NN: 0xFF
V[5] after: 0x0B
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x0B
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = B
height = 1
gIndex = 2DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 14
height = 6
gIndex = 506
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 14
height = 6
gIndex = 512
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 14
height = 6
gIndex = 52A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x06
V[0]: 0x04
V[B] after: 0x0A
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 14
height = 6
gIndex = 50A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 14
height = 6
gIndex = 516
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 14
height = 6
gIndex = 52E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x14
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = B
height = 1
gIndex = 2DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x0B
NN: 0xFF
V[5] after: 0x0A
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x0A
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = A
height = 1
gIndex = 29F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 14
height = 6
gIndex = 50A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 14
height = 6
gIndex = 516
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 14
height = 6
gIndex = 52E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0x04
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 14
height = 6
gIndex = 50E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 14
height = 6
gIndex = 51A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 14
height = 6
gIndex = 532
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x14
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = A
height = 1
gIndex = 29F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x0A
NN: 0xFF
V[5] after: 0x09
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x09
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 9
height = 1
gIndex = 25F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 14
height = 6
gIndex = 50E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 14
height = 6
gIndex = 51A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 14
height = 6
gIndex = 532
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0x04
V[B] after: 0x12
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x12
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x14
NN: 0x02
V[C] after: 0x16
pc: 0x6AFC
sets VX to NN
V[A]: 0x04
NN: 0xFC
V[A] after: 0xFC
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x12
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 16
height = 6
gIndex = 592
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 16
height = 6
gIndex = 59E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = 16
height = 6
gIndex = 5B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x16
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 9
height = 1
gIndex = 25F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x09
NN: 0xFF
V[5] after: 0x08
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x08
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 8
height = 1
gIndex = 21F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 16
height = 6
gIndex = 592
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1E
y = 16
height = 6
gIndex = 59E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 36
y = 16
height = 6
gIndex = 5B6
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x36
NN: 0x0C
V[B] after: 0x42
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x42
NN: 0xD0
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x12
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0E
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0E
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 16
height = 6
gIndex = 58E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 16
height = 6
gIndex = 59A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 16
height = 6
gIndex = 5B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x16
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 8
height = 1
gIndex = 21F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x08
NN: 0xFF
V[5] after: 0x07
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x07
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 7
height = 1
gIndex = 1DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 16
height = 6
gIndex = 58E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 1A
y = 16
height = 6
gIndex = 59A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 32
y = 16
height = 6
gIndex = 5B2
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x32
NN: 0x0C
V[B] after: 0x3E
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3E
NN: 0xD0
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0E
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x0A
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x0A
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 16
height = 6
gIndex = 58A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 16
height = 6
gIndex = 596
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 16
height = 6
gIndex = 5AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x16
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 7
height = 1
gIndex = 1DF
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x07
NN: 0xFF
V[5] after: 0x06
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x06
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 6
height = 1
gIndex = 19F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = A
y = 16
height = 6
gIndex = 58A
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0A
NN: 0x0C
V[B] after: 0x16
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 16
y = 16
height = 6
gIndex = 596
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x16
NN: 0x0C
V[B] after: 0x22
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x22
NN: 0x0C
V[B] after: 0x2E
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2E
y = 16
height = 6
gIndex = 5AE
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2E
NN: 0x0C
V[B] after: 0x3A
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x3A
NN: 0xD0
V[B] after: 0x0A
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x0A
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x06
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x06
NN: 0x02
VX != NN, move to next instruction.
pc: 0x1323
jump to address 0323
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 16
height = 6
gIndex = 586
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 16
height = 6
gIndex = 592
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 16
height = 6
gIndex = 5AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x16
NN: 0x18
VX != NN, move to next instruction.
pc: 0x126F
jump to address 026F
pc: 0x6004
sets VX to NN
V[0]: 0x01
NN: 0x04
V[0] after: 0x04
pc: 0xE09E
pc: 0x127D
jump to address 027D
pc: 0x6006
sets VX to NN
V[0]: 0x04
NN: 0x06
V[0] after: 0x06
pc: 0xE09E
pc: 0x128B
jump to address 028B
pc: 0x3600
skips next instruction if VX equals NN
V[6]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0x129F
jump to address 029F
pc: 0xA3CF
sets I to address NNN
I: 0x3B7
NNN: 0x3CF
I: 0x3CF
pc: 0xD451
Draw Sprite
x = 1F
y = 6
height = 1
gIndex = 19F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x75FF
adds NN to VX
V[5]: 0x06
NN: 0xFF
V[5] after: 0x05
pc: 0x35FF
skips next instruction if VX equals NN
V[5]: 0x05
NN: 0xFF
VX != NN, move to next instruction.
pc: 0x12AD
jump to address 02AD
pc: 0xD451
Draw Sprite
x = 1F
y = 5
height = 1
gIndex = 15F
i = 0
sRow = 10
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x3F01
skips next instruction if VX equals NN
V[F]: 0x00
NN: 0x01
VX != NN, move to next instruction.
pc: 0x12E9
jump to address 02E9
pc: 0x3E00
skips next instruction if VX equals NN
V[E]: 0x0D
NN: 0x00
VX != NN, move to next instruction.
pc: 0x1307
jump to address 0307
pc: 0xF707
sets VX to delay timer
V[7]: 0x00
delay_timer:  
V[7]: 0x00
pc: 0x3700
skips next instruction if VX equals NN
V[7]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0xFD15
pc: 0x2347
push pc to stack 0x030F
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3CF
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x06
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 6
y = 16
height = 6
gIndex = 586
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x06
NN: 0x0C
V[B] after: 0x12
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 12
y = 16
height = 6
gIndex = 592
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x12
NN: 0x0C
V[B] after: 0x1E
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1E
NN: 0x0C
V[B] after: 0x2A
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2A
y = 16
height = 6
gIndex = 5AA
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 2
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 6
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 4
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 1
newPixel after XOR: 0
pixel has been unset, VCARRY set to 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x2A
NN: 0x0C
V[B] after: 0x36
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x36
NN: 0xD0
V[B] after: 0x06
pc: 0x00EE
Return from subroutine: 030F
pc: 0x8BA4
adds VY to VX
V[B]: 0x06
V[0]: 0xFC
overflow, VCARRY set to 1
V[B] after: 0x02
pc: 0x3B12
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x12
VX != NN, move to next instruction.
pc: 0x131B
jump to address 031B
pc: 0x3B02
skips next instruction if VX equals NN
V[B]: 0x02
NN: 0x02
VX == NN, skipping next instruction.
pc: 0x7C02
adds NN to VX
V[C]: 0x16
NN: 0x02
V[C] after: 0x18
pc: 0x6A04
sets VX to NN
V[A]: 0xFC
NN: 0x04
V[A] after: 0x04
pc: 0x2347
push pc to stack 0x0323
Jump to subroutine at 0x0347
pc: 0xA3B7
sets I to address NNN
I: 0x3B7
NNN: 0x3B7
I: 0x3B7
pc: 0xF91E
adds VX to I, sets VCARRY to 1 on range overflow
V[9]: 0x00
I: 0x3B7
I: 0x3B7
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x235F
push pc to stack 0x034D
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x01
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x08
V[0] after: 0x08
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x08
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 2
y = 18
height = 6
gIndex = 602
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x02
NN: 0x0C
V[B] after: 0x0E
pc: 0x00EE
Return from subroutine: 034D
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x08
VCARRY: 0x 
V[1]: 0x04
pc: 0x235F
push pc to stack 0x0351
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x08
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x04
V[0] after: 0x04
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x04
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = E
y = 18
height = 6
gIndex = 60E
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x0E
NN: 0x0C
V[B] after: 0x1A
pc: 0x00EE
Return from subroutine: 0351
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x04
VCARRY: 0x 
V[1]: 0x02
pc: 0x235F
push pc to stack 0x0355
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x04
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x02
V[0] after: 0x00
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x00
NN: 0x00
VX == NN, skipping next instruction.
pc: 0x7B0C
adds NN to VX
V[B]: 0x1A
NN: 0x0C
V[B] after: 0x26
pc: 0x00EE
Return from subroutine: 0355
pc: 0x8106
shifts VX right by one, VCARRY is set to least sig bit of VX prior to shift
V[1]: 0x02
VCARRY: 0x 
V[1]: 0x01
pc: 0x235F
push pc to stack 0x0359
Jump to subroutine at 0x035F
pc: 0x80E0
sets VX to the value of VY
V[0]: 0x00
V[0]: 0x0D
V[0] after: 0x0D
pc: 0x8012
sets VX to the value of VX & VY
V[0]: 0x0D
V[0]: 0x01
V[0] after: 0x01
pc: 0x3000
skips next instruction if VX equals NN
V[0]: 0x01
NN: 0x00
VX != NN, move to next instruction.
pc: 0xDBC6
Draw Sprite
x = 26
y = 18
height = 6
gIndex = 626
i = 0
sRow = 3C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 7E
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = FF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 5
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7B0C
adds NN to VX
V[B]: 0x26
NN: 0x0C
V[B] after: 0x32
pc: 0x00EE
Return from subroutine: 0359
pc: 0x7BD0
adds NN to VX
V[B]: 0x32
NN: 0xD0
V[B] after: 0x02
pc: 0x00EE
Return from subroutine: 0323
pc: 0x3C18
skips next instruction if VX equals NN
V[C]: 0x18
NN: 0x18
VX == NN, skipping next instruction.
pc: 0x00E0
Clear Screen
pc: 0xA4D3
sets I to address NNN
I: 0x3B7
NNN: 0x4D3
I: 0x4D3
pc: 0x6014
sets VX to NN
V[0]: 0x01
NN: 0x14
V[0] after: 0x14
pc: 0x6108
sets VX to NN
V[1]: 0x01
NN: 0x08
V[1] after: 0x08
pc: 0x620F
sets VX to NN
V[2]: 0x01
NN: 0x0F
V[2] after: 0x0F
pc: 0xD01F
Draw Sprite
x = 14
y = 8
height = F
gIndex = 214
i = 0
sRow = F9
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 1
sRow = 81
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 2
sRow = B9
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = 8B
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 4
sRow = 9A
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 9A
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = FA
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 8
sRow = FA
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 9
sRow = 8A
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = A
sRow = 9A
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = B
sRow = 9A
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = C
sRow = 9B
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = D
sRow = 99
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = E
sRow = F8
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
pc: 0x7008
adds NN to VX
V[0]: 0x14
NN: 0x08
V[0] after: 0x1C
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x0F
I: 0x4D3
I: 0x4E2
pc: 0x302C
skips next instruction if VX equals NN
V[0]: 0x1C
NN: 0x2C
VX != NN, move to next instruction.
pc: 0x1333
jump to address 0333
pc: 0xD01F
Draw Sprite
x = 1C
y = 8
height = F
gIndex = 21C
i = 0
sRow = E6
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 1
sRow = 25
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 2
sRow = 25
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 3
sRow = F4
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = 34
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = 34
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = 34
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 8
sRow = 17
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 9
sRow = 14
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = A
sRow = 34
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = B
sRow = 37
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = C
sRow = 36
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = D
sRow = 26
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = E
sRow = C7
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7008
adds NN to VX
V[0]: 0x1C
NN: 0x08
V[0] after: 0x24
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x0F
I: 0x4E2
I: 0x4F1
pc: 0x302C
skips next instruction if VX equals NN
V[0]: 0x24
NN: 0x2C
VX != NN, move to next instruction.
pc: 0x1333
jump to address 0333
pc: 0xD01F
Draw Sprite
x = 24
y = 8
height = F
gIndex = 224
i = 0
sRow = DF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 1
sRow = 50
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 2
sRow = 50
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 3
sRow = 5C
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 4
sRow = D8
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 5
sRow = D8
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 6
sRow = DF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 7
sRow = 0
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = 8
sRow = DF
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = 9
sRow = 11
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = A
sRow = 1F
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = B
sRow = 12
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
i = C
sRow = 1B
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = D
sRow = 19
j = 0
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 1
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
i = E
sRow = D9
j = 0
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 1
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 2
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 3
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 4
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
j = 5
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 6
newPixel: 0
gfx pixel: 0
newPixel after XOR: 0
j = 7
newPixel: 1
gfx pixel: 0
newPixel after XOR: 1
pc: 0x7008
adds NN to VX
V[0]: 0x24
NN: 0x08
V[0] after: 0x2C
pc: 0xF21E
adds VX to I, sets VCARRY to 1 on range overflow
V[2]: 0x0F
I: 0x4F1
I: 0x500
pc: 0x302C
skips next instruction if VX equals NN
V[0]: 0x2C
NN: 0x2C
VX == NN, skipping next instruction.
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A
pc: 0xF00A

